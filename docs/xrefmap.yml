### YamlMime:XRefMap
sorted: true
references:
- uid: ClientFunctionsLibrary
  name: ClientFunctionsLibrary
  href: api/ClientFunctionsLibrary.html
  commentId: N:ClientFunctionsLibrary
  fullName: ClientFunctionsLibrary
  nameWithType: ClientFunctionsLibrary
- uid: ClientFunctionsLibrary.ClientConnection
  name: ClientConnection
  href: api/ClientFunctionsLibrary.ClientConnection.html
  commentId: T:ClientFunctionsLibrary.ClientConnection
  fullName: ClientFunctionsLibrary.ClientConnection
  nameWithType: ClientConnection
- uid: ClientFunctionsLibrary.ClientConnection.#ctor(System.Net.IPAddress,System.Int32,System.Int32)
  name: ClientConnection(IPAddress, Int32, Int32)
  href: api/ClientFunctionsLibrary.ClientConnection.html#ClientFunctionsLibrary_ClientConnection__ctor_System_Net_IPAddress_System_Int32_System_Int32_
  commentId: M:ClientFunctionsLibrary.ClientConnection.#ctor(System.Net.IPAddress,System.Int32,System.Int32)
  fullName: ClientFunctionsLibrary.ClientConnection.ClientConnection(System.Net.IPAddress, System.Int32, System.Int32)
  nameWithType: ClientConnection.ClientConnection(IPAddress, Int32, Int32)
- uid: ClientFunctionsLibrary.ClientConnection.#ctor*
  name: ClientConnection
  href: api/ClientFunctionsLibrary.ClientConnection.html#ClientFunctionsLibrary_ClientConnection__ctor_
  commentId: Overload:ClientFunctionsLibrary.ClientConnection.#ctor
  isSpec: "True"
  fullName: ClientFunctionsLibrary.ClientConnection.ClientConnection
  nameWithType: ClientConnection.ClientConnection
- uid: ClientFunctionsLibrary.ClientConnection.address
  name: address
  href: api/ClientFunctionsLibrary.ClientConnection.html#ClientFunctionsLibrary_ClientConnection_address
  commentId: F:ClientFunctionsLibrary.ClientConnection.address
  fullName: ClientFunctionsLibrary.ClientConnection.address
  nameWithType: ClientConnection.address
- uid: ClientFunctionsLibrary.ClientConnection.Buffer_size
  name: Buffer_size
  href: api/ClientFunctionsLibrary.ClientConnection.html#ClientFunctionsLibrary_ClientConnection_Buffer_size
  commentId: F:ClientFunctionsLibrary.ClientConnection.Buffer_size
  fullName: ClientFunctionsLibrary.ClientConnection.Buffer_size
  nameWithType: ClientConnection.Buffer_size
- uid: ClientFunctionsLibrary.ClientConnection.clientLoop(System.Net.Sockets.NetworkStream@,System.Byte[],System.Net.Sockets.TcpClient@)
  name: clientLoop(ref NetworkStream, Byte[], ref TcpClient)
  href: api/ClientFunctionsLibrary.ClientConnection.html#ClientFunctionsLibrary_ClientConnection_clientLoop_System_Net_Sockets_NetworkStream__System_Byte___System_Net_Sockets_TcpClient__
  commentId: M:ClientFunctionsLibrary.ClientConnection.clientLoop(System.Net.Sockets.NetworkStream@,System.Byte[],System.Net.Sockets.TcpClient@)
  name.vb: clientLoop(ByRef NetworkStream, Byte(), ByRef TcpClient)
  fullName: ClientFunctionsLibrary.ClientConnection.clientLoop(ref System.Net.Sockets.NetworkStream, System.Byte[], ref System.Net.Sockets.TcpClient)
  fullName.vb: ClientFunctionsLibrary.ClientConnection.clientLoop(ByRef System.Net.Sockets.NetworkStream, System.Byte(), ByRef System.Net.Sockets.TcpClient)
  nameWithType: ClientConnection.clientLoop(ref NetworkStream, Byte[], ref TcpClient)
  nameWithType.vb: ClientConnection.clientLoop(ByRef NetworkStream, Byte(), ByRef TcpClient)
- uid: ClientFunctionsLibrary.ClientConnection.clientLoop*
  name: clientLoop
  href: api/ClientFunctionsLibrary.ClientConnection.html#ClientFunctionsLibrary_ClientConnection_clientLoop_
  commentId: Overload:ClientFunctionsLibrary.ClientConnection.clientLoop
  isSpec: "True"
  fullName: ClientFunctionsLibrary.ClientConnection.clientLoop
  nameWithType: ClientConnection.clientLoop
- uid: ClientFunctionsLibrary.ClientConnection.closeClient(System.Net.Sockets.TcpClient@,System.Net.Sockets.NetworkStream@)
  name: closeClient(ref TcpClient, ref NetworkStream)
  href: api/ClientFunctionsLibrary.ClientConnection.html#ClientFunctionsLibrary_ClientConnection_closeClient_System_Net_Sockets_TcpClient__System_Net_Sockets_NetworkStream__
  commentId: M:ClientFunctionsLibrary.ClientConnection.closeClient(System.Net.Sockets.TcpClient@,System.Net.Sockets.NetworkStream@)
  name.vb: closeClient(ByRef TcpClient, ByRef NetworkStream)
  fullName: ClientFunctionsLibrary.ClientConnection.closeClient(ref System.Net.Sockets.TcpClient, ref System.Net.Sockets.NetworkStream)
  fullName.vb: ClientFunctionsLibrary.ClientConnection.closeClient(ByRef System.Net.Sockets.TcpClient, ByRef System.Net.Sockets.NetworkStream)
  nameWithType: ClientConnection.closeClient(ref TcpClient, ref NetworkStream)
  nameWithType.vb: ClientConnection.closeClient(ByRef TcpClient, ByRef NetworkStream)
- uid: ClientFunctionsLibrary.ClientConnection.closeClient*
  name: closeClient
  href: api/ClientFunctionsLibrary.ClientConnection.html#ClientFunctionsLibrary_ClientConnection_closeClient_
  commentId: Overload:ClientFunctionsLibrary.ClientConnection.closeClient
  isSpec: "True"
  fullName: ClientFunctionsLibrary.ClientConnection.closeClient
  nameWithType: ClientConnection.closeClient
- uid: ClientFunctionsLibrary.ClientConnection.createClient
  name: createClient()
  href: api/ClientFunctionsLibrary.ClientConnection.html#ClientFunctionsLibrary_ClientConnection_createClient
  commentId: M:ClientFunctionsLibrary.ClientConnection.createClient
  fullName: ClientFunctionsLibrary.ClientConnection.createClient()
  nameWithType: ClientConnection.createClient()
- uid: ClientFunctionsLibrary.ClientConnection.createClient*
  name: createClient
  href: api/ClientFunctionsLibrary.ClientConnection.html#ClientFunctionsLibrary_ClientConnection_createClient_
  commentId: Overload:ClientFunctionsLibrary.ClientConnection.createClient
  isSpec: "True"
  fullName: ClientFunctionsLibrary.ClientConnection.createClient
  nameWithType: ClientConnection.createClient
- uid: ClientFunctionsLibrary.ClientConnection.port
  name: port
  href: api/ClientFunctionsLibrary.ClientConnection.html#ClientFunctionsLibrary_ClientConnection_port
  commentId: F:ClientFunctionsLibrary.ClientConnection.port
  fullName: ClientFunctionsLibrary.ClientConnection.port
  nameWithType: ClientConnection.port
- uid: ClientFunctionsLibrary.ClientConnection.reciveMessage(System.Net.Sockets.NetworkStream,System.Byte[])
  name: reciveMessage(NetworkStream, Byte[])
  href: api/ClientFunctionsLibrary.ClientConnection.html#ClientFunctionsLibrary_ClientConnection_reciveMessage_System_Net_Sockets_NetworkStream_System_Byte___
  commentId: M:ClientFunctionsLibrary.ClientConnection.reciveMessage(System.Net.Sockets.NetworkStream,System.Byte[])
  name.vb: reciveMessage(NetworkStream, Byte())
  fullName: ClientFunctionsLibrary.ClientConnection.reciveMessage(System.Net.Sockets.NetworkStream, System.Byte[])
  fullName.vb: ClientFunctionsLibrary.ClientConnection.reciveMessage(System.Net.Sockets.NetworkStream, System.Byte())
  nameWithType: ClientConnection.reciveMessage(NetworkStream, Byte[])
  nameWithType.vb: ClientConnection.reciveMessage(NetworkStream, Byte())
- uid: ClientFunctionsLibrary.ClientConnection.reciveMessage*
  name: reciveMessage
  href: api/ClientFunctionsLibrary.ClientConnection.html#ClientFunctionsLibrary_ClientConnection_reciveMessage_
  commentId: Overload:ClientFunctionsLibrary.ClientConnection.reciveMessage
  isSpec: "True"
  fullName: ClientFunctionsLibrary.ClientConnection.reciveMessage
  nameWithType: ClientConnection.reciveMessage
- uid: ClientFunctionsLibrary.ClientConnection.sendMessage(System.Net.Sockets.NetworkStream,System.String)
  name: sendMessage(NetworkStream, String)
  href: api/ClientFunctionsLibrary.ClientConnection.html#ClientFunctionsLibrary_ClientConnection_sendMessage_System_Net_Sockets_NetworkStream_System_String_
  commentId: M:ClientFunctionsLibrary.ClientConnection.sendMessage(System.Net.Sockets.NetworkStream,System.String)
  fullName: ClientFunctionsLibrary.ClientConnection.sendMessage(System.Net.Sockets.NetworkStream, System.String)
  nameWithType: ClientConnection.sendMessage(NetworkStream, String)
- uid: ClientFunctionsLibrary.ClientConnection.sendMessage*
  name: sendMessage
  href: api/ClientFunctionsLibrary.ClientConnection.html#ClientFunctionsLibrary_ClientConnection_sendMessage_
  commentId: Overload:ClientFunctionsLibrary.ClientConnection.sendMessage
  isSpec: "True"
  fullName: ClientFunctionsLibrary.ClientConnection.sendMessage
  nameWithType: ClientConnection.sendMessage
- uid: TCPServer
  name: TCPServer
  href: api/TCPServer.html
  commentId: N:TCPServer
  fullName: TCPServer
  nameWithType: TCPServer
- uid: TCPServer.AbstractServer
  name: AbstractServer
  href: api/TCPServer.AbstractServer.html
  commentId: T:TCPServer.AbstractServer
  fullName: TCPServer.AbstractServer
  nameWithType: AbstractServer
- uid: TCPServer.AbstractServer.#ctor(System.Net.IPAddress,System.Int32)
  name: AbstractServer(IPAddress, Int32)
  href: api/TCPServer.AbstractServer.html#TCPServer_AbstractServer__ctor_System_Net_IPAddress_System_Int32_
  commentId: M:TCPServer.AbstractServer.#ctor(System.Net.IPAddress,System.Int32)
  fullName: TCPServer.AbstractServer.AbstractServer(System.Net.IPAddress, System.Int32)
  nameWithType: AbstractServer.AbstractServer(IPAddress, Int32)
- uid: TCPServer.AbstractServer.#ctor*
  name: AbstractServer
  href: api/TCPServer.AbstractServer.html#TCPServer_AbstractServer__ctor_
  commentId: Overload:TCPServer.AbstractServer.#ctor
  isSpec: "True"
  fullName: TCPServer.AbstractServer.AbstractServer
  nameWithType: AbstractServer.AbstractServer
- uid: TCPServer.AbstractServer.AcceptClient
  name: AcceptClient()
  href: api/TCPServer.AbstractServer.html#TCPServer_AbstractServer_AcceptClient
  commentId: M:TCPServer.AbstractServer.AcceptClient
  fullName: TCPServer.AbstractServer.AcceptClient()
  nameWithType: AbstractServer.AcceptClient()
- uid: TCPServer.AbstractServer.AcceptClient*
  name: AcceptClient
  href: api/TCPServer.AbstractServer.html#TCPServer_AbstractServer_AcceptClient_
  commentId: Overload:TCPServer.AbstractServer.AcceptClient
  isSpec: "True"
  fullName: TCPServer.AbstractServer.AcceptClient
  nameWithType: AbstractServer.AcceptClient
- uid: TCPServer.AbstractServer.BeginDataTransmission(System.Net.Sockets.NetworkStream)
  name: BeginDataTransmission(NetworkStream)
  href: api/TCPServer.AbstractServer.html#TCPServer_AbstractServer_BeginDataTransmission_System_Net_Sockets_NetworkStream_
  commentId: M:TCPServer.AbstractServer.BeginDataTransmission(System.Net.Sockets.NetworkStream)
  fullName: TCPServer.AbstractServer.BeginDataTransmission(System.Net.Sockets.NetworkStream)
  nameWithType: AbstractServer.BeginDataTransmission(NetworkStream)
- uid: TCPServer.AbstractServer.BeginDataTransmission*
  name: BeginDataTransmission
  href: api/TCPServer.AbstractServer.html#TCPServer_AbstractServer_BeginDataTransmission_
  commentId: Overload:TCPServer.AbstractServer.BeginDataTransmission
  isSpec: "True"
  fullName: TCPServer.AbstractServer.BeginDataTransmission
  nameWithType: AbstractServer.BeginDataTransmission
- uid: TCPServer.AbstractServer.Buffer_size
  name: Buffer_size
  href: api/TCPServer.AbstractServer.html#TCPServer_AbstractServer_Buffer_size
  commentId: P:TCPServer.AbstractServer.Buffer_size
  fullName: TCPServer.AbstractServer.Buffer_size
  nameWithType: AbstractServer.Buffer_size
- uid: TCPServer.AbstractServer.Buffer_size*
  name: Buffer_size
  href: api/TCPServer.AbstractServer.html#TCPServer_AbstractServer_Buffer_size_
  commentId: Overload:TCPServer.AbstractServer.Buffer_size
  isSpec: "True"
  fullName: TCPServer.AbstractServer.Buffer_size
  nameWithType: AbstractServer.Buffer_size
- uid: TCPServer.AbstractServer.checkPort
  name: checkPort()
  href: api/TCPServer.AbstractServer.html#TCPServer_AbstractServer_checkPort
  commentId: M:TCPServer.AbstractServer.checkPort
  fullName: TCPServer.AbstractServer.checkPort()
  nameWithType: AbstractServer.checkPort()
- uid: TCPServer.AbstractServer.checkPort*
  name: checkPort
  href: api/TCPServer.AbstractServer.html#TCPServer_AbstractServer_checkPort_
  commentId: Overload:TCPServer.AbstractServer.checkPort
  isSpec: "True"
  fullName: TCPServer.AbstractServer.checkPort
  nameWithType: AbstractServer.checkPort
- uid: TCPServer.AbstractServer.IPAddress
  name: IPAddress
  href: api/TCPServer.AbstractServer.html#TCPServer_AbstractServer_IPAddress
  commentId: P:TCPServer.AbstractServer.IPAddress
  fullName: TCPServer.AbstractServer.IPAddress
  nameWithType: AbstractServer.IPAddress
- uid: TCPServer.AbstractServer.IPAddress*
  name: IPAddress
  href: api/TCPServer.AbstractServer.html#TCPServer_AbstractServer_IPAddress_
  commentId: Overload:TCPServer.AbstractServer.IPAddress
  isSpec: "True"
  fullName: TCPServer.AbstractServer.IPAddress
  nameWithType: AbstractServer.IPAddress
- uid: TCPServer.AbstractServer.Port
  name: Port
  href: api/TCPServer.AbstractServer.html#TCPServer_AbstractServer_Port
  commentId: P:TCPServer.AbstractServer.Port
  fullName: TCPServer.AbstractServer.Port
  nameWithType: AbstractServer.Port
- uid: TCPServer.AbstractServer.Port*
  name: Port
  href: api/TCPServer.AbstractServer.html#TCPServer_AbstractServer_Port_
  commentId: Overload:TCPServer.AbstractServer.Port
  isSpec: "True"
  fullName: TCPServer.AbstractServer.Port
  nameWithType: AbstractServer.Port
- uid: TCPServer.AbstractServer.Start
  name: Start()
  href: api/TCPServer.AbstractServer.html#TCPServer_AbstractServer_Start
  commentId: M:TCPServer.AbstractServer.Start
  fullName: TCPServer.AbstractServer.Start()
  nameWithType: AbstractServer.Start()
- uid: TCPServer.AbstractServer.Start*
  name: Start
  href: api/TCPServer.AbstractServer.html#TCPServer_AbstractServer_Start_
  commentId: Overload:TCPServer.AbstractServer.Start
  isSpec: "True"
  fullName: TCPServer.AbstractServer.Start
  nameWithType: AbstractServer.Start
- uid: TCPServer.AbstractServer.StartListening
  name: StartListening()
  href: api/TCPServer.AbstractServer.html#TCPServer_AbstractServer_StartListening
  commentId: M:TCPServer.AbstractServer.StartListening
  fullName: TCPServer.AbstractServer.StartListening()
  nameWithType: AbstractServer.StartListening()
- uid: TCPServer.AbstractServer.StartListening*
  name: StartListening
  href: api/TCPServer.AbstractServer.html#TCPServer_AbstractServer_StartListening_
  commentId: Overload:TCPServer.AbstractServer.StartListening
  isSpec: "True"
  fullName: TCPServer.AbstractServer.StartListening
  nameWithType: AbstractServer.StartListening
- uid: TCPServer.AbstractServer.Stream
  name: Stream
  href: api/TCPServer.AbstractServer.html#TCPServer_AbstractServer_Stream
  commentId: P:TCPServer.AbstractServer.Stream
  fullName: TCPServer.AbstractServer.Stream
  nameWithType: AbstractServer.Stream
- uid: TCPServer.AbstractServer.Stream*
  name: Stream
  href: api/TCPServer.AbstractServer.html#TCPServer_AbstractServer_Stream_
  commentId: Overload:TCPServer.AbstractServer.Stream
  isSpec: "True"
  fullName: TCPServer.AbstractServer.Stream
  nameWithType: AbstractServer.Stream
- uid: TCPServer.AbstractServer.TcpClient
  name: TcpClient
  href: api/TCPServer.AbstractServer.html#TCPServer_AbstractServer_TcpClient
  commentId: P:TCPServer.AbstractServer.TcpClient
  fullName: TCPServer.AbstractServer.TcpClient
  nameWithType: AbstractServer.TcpClient
- uid: TCPServer.AbstractServer.TcpClient*
  name: TcpClient
  href: api/TCPServer.AbstractServer.html#TCPServer_AbstractServer_TcpClient_
  commentId: Overload:TCPServer.AbstractServer.TcpClient
  isSpec: "True"
  fullName: TCPServer.AbstractServer.TcpClient
  nameWithType: AbstractServer.TcpClient
- uid: TCPServer.AbstractServer.TcpListener
  name: TcpListener
  href: api/TCPServer.AbstractServer.html#TCPServer_AbstractServer_TcpListener
  commentId: P:TCPServer.AbstractServer.TcpListener
  fullName: TCPServer.AbstractServer.TcpListener
  nameWithType: AbstractServer.TcpListener
- uid: TCPServer.AbstractServer.TcpListener*
  name: TcpListener
  href: api/TCPServer.AbstractServer.html#TCPServer_AbstractServer_TcpListener_
  commentId: Overload:TCPServer.AbstractServer.TcpListener
  isSpec: "True"
  fullName: TCPServer.AbstractServer.TcpListener
  nameWithType: AbstractServer.TcpListener
- uid: TCPServer.DAL
  name: TCPServer.DAL
  href: api/TCPServer.DAL.html
  commentId: N:TCPServer.DAL
  fullName: TCPServer.DAL
  nameWithType: TCPServer.DAL
- uid: TCPServer.DAL.BaseRepository`1
  name: BaseRepository<TEntity>
  href: api/TCPServer.DAL.BaseRepository-1.html
  commentId: T:TCPServer.DAL.BaseRepository`1
  name.vb: BaseRepository(Of TEntity)
  fullName: TCPServer.DAL.BaseRepository<TEntity>
  fullName.vb: TCPServer.DAL.BaseRepository(Of TEntity)
  nameWithType: BaseRepository<TEntity>
  nameWithType.vb: BaseRepository(Of TEntity)
- uid: TCPServer.DAL.BaseRepository`1.#ctor(TCPServer.Models.ServerDatabaseContext)
  name: BaseRepository(ServerDatabaseContext)
  href: api/TCPServer.DAL.BaseRepository-1.html#TCPServer_DAL_BaseRepository_1__ctor_TCPServer_Models_ServerDatabaseContext_
  commentId: M:TCPServer.DAL.BaseRepository`1.#ctor(TCPServer.Models.ServerDatabaseContext)
  fullName: TCPServer.DAL.BaseRepository<TEntity>.BaseRepository(TCPServer.Models.ServerDatabaseContext)
  fullName.vb: TCPServer.DAL.BaseRepository(Of TEntity).BaseRepository(TCPServer.Models.ServerDatabaseContext)
  nameWithType: BaseRepository<TEntity>.BaseRepository(ServerDatabaseContext)
  nameWithType.vb: BaseRepository(Of TEntity).BaseRepository(ServerDatabaseContext)
- uid: TCPServer.DAL.BaseRepository`1.#ctor*
  name: BaseRepository
  href: api/TCPServer.DAL.BaseRepository-1.html#TCPServer_DAL_BaseRepository_1__ctor_
  commentId: Overload:TCPServer.DAL.BaseRepository`1.#ctor
  isSpec: "True"
  fullName: TCPServer.DAL.BaseRepository<TEntity>.BaseRepository
  fullName.vb: TCPServer.DAL.BaseRepository(Of TEntity).BaseRepository
  nameWithType: BaseRepository<TEntity>.BaseRepository
  nameWithType.vb: BaseRepository(Of TEntity).BaseRepository
- uid: TCPServer.DAL.BaseRepository`1.Commit
  name: Commit()
  href: api/TCPServer.DAL.BaseRepository-1.html#TCPServer_DAL_BaseRepository_1_Commit
  commentId: M:TCPServer.DAL.BaseRepository`1.Commit
  fullName: TCPServer.DAL.BaseRepository<TEntity>.Commit()
  fullName.vb: TCPServer.DAL.BaseRepository(Of TEntity).Commit()
  nameWithType: BaseRepository<TEntity>.Commit()
  nameWithType.vb: BaseRepository(Of TEntity).Commit()
- uid: TCPServer.DAL.BaseRepository`1.Commit*
  name: Commit
  href: api/TCPServer.DAL.BaseRepository-1.html#TCPServer_DAL_BaseRepository_1_Commit_
  commentId: Overload:TCPServer.DAL.BaseRepository`1.Commit
  isSpec: "True"
  fullName: TCPServer.DAL.BaseRepository<TEntity>.Commit
  fullName.vb: TCPServer.DAL.BaseRepository(Of TEntity).Commit
  nameWithType: BaseRepository<TEntity>.Commit
  nameWithType.vb: BaseRepository(Of TEntity).Commit
- uid: TCPServer.DAL.BaseRepository`1.dbSet
  name: dbSet
  href: api/TCPServer.DAL.BaseRepository-1.html#TCPServer_DAL_BaseRepository_1_dbSet
  commentId: F:TCPServer.DAL.BaseRepository`1.dbSet
  fullName: TCPServer.DAL.BaseRepository<TEntity>.dbSet
  fullName.vb: TCPServer.DAL.BaseRepository(Of TEntity).dbSet
  nameWithType: BaseRepository<TEntity>.dbSet
  nameWithType.vb: BaseRepository(Of TEntity).dbSet
- uid: TCPServer.DAL.BaseRepository`1.Delete(`0)
  name: Delete(TEntity)
  href: api/TCPServer.DAL.BaseRepository-1.html#TCPServer_DAL_BaseRepository_1_Delete__0_
  commentId: M:TCPServer.DAL.BaseRepository`1.Delete(`0)
  fullName: TCPServer.DAL.BaseRepository<TEntity>.Delete(TEntity)
  fullName.vb: TCPServer.DAL.BaseRepository(Of TEntity).Delete(TEntity)
  nameWithType: BaseRepository<TEntity>.Delete(TEntity)
  nameWithType.vb: BaseRepository(Of TEntity).Delete(TEntity)
- uid: TCPServer.DAL.BaseRepository`1.Delete(System.Object)
  name: Delete(Object)
  href: api/TCPServer.DAL.BaseRepository-1.html#TCPServer_DAL_BaseRepository_1_Delete_System_Object_
  commentId: M:TCPServer.DAL.BaseRepository`1.Delete(System.Object)
  fullName: TCPServer.DAL.BaseRepository<TEntity>.Delete(System.Object)
  fullName.vb: TCPServer.DAL.BaseRepository(Of TEntity).Delete(System.Object)
  nameWithType: BaseRepository<TEntity>.Delete(Object)
  nameWithType.vb: BaseRepository(Of TEntity).Delete(Object)
- uid: TCPServer.DAL.BaseRepository`1.Delete*
  name: Delete
  href: api/TCPServer.DAL.BaseRepository-1.html#TCPServer_DAL_BaseRepository_1_Delete_
  commentId: Overload:TCPServer.DAL.BaseRepository`1.Delete
  isSpec: "True"
  fullName: TCPServer.DAL.BaseRepository<TEntity>.Delete
  fullName.vb: TCPServer.DAL.BaseRepository(Of TEntity).Delete
  nameWithType: BaseRepository<TEntity>.Delete
  nameWithType.vb: BaseRepository(Of TEntity).Delete
- uid: TCPServer.DAL.BaseRepository`1.Get(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Func{System.Linq.IQueryable{`0},System.Linq.IOrderedQueryable{`0}},System.String)
  name: Get(Expression<Func<TEntity, Boolean>>, Func<IQueryable<TEntity>, IOrderedQueryable<TEntity>>, String)
  href: api/TCPServer.DAL.BaseRepository-1.html#TCPServer_DAL_BaseRepository_1_Get_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Func_System_Linq_IQueryable__0__System_Linq_IOrderedQueryable__0___System_String_
  commentId: M:TCPServer.DAL.BaseRepository`1.Get(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Func{System.Linq.IQueryable{`0},System.Linq.IOrderedQueryable{`0}},System.String)
  name.vb: Get(Expression(Of Func(Of TEntity, Boolean)), Func(Of IQueryable(Of TEntity), IOrderedQueryable(Of TEntity)), String)
  fullName: TCPServer.DAL.BaseRepository<TEntity>.Get(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>, System.Func<System.Linq.IQueryable<TEntity>, System.Linq.IOrderedQueryable<TEntity>>, System.String)
  fullName.vb: TCPServer.DAL.BaseRepository(Of TEntity).Get(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Boolean)), System.Func(Of System.Linq.IQueryable(Of TEntity), System.Linq.IOrderedQueryable(Of TEntity)), System.String)
  nameWithType: BaseRepository<TEntity>.Get(Expression<Func<TEntity, Boolean>>, Func<IQueryable<TEntity>, IOrderedQueryable<TEntity>>, String)
  nameWithType.vb: BaseRepository(Of TEntity).Get(Expression(Of Func(Of TEntity, Boolean)), Func(Of IQueryable(Of TEntity), IOrderedQueryable(Of TEntity)), String)
- uid: TCPServer.DAL.BaseRepository`1.Get*
  name: Get
  href: api/TCPServer.DAL.BaseRepository-1.html#TCPServer_DAL_BaseRepository_1_Get_
  commentId: Overload:TCPServer.DAL.BaseRepository`1.Get
  isSpec: "True"
  fullName: TCPServer.DAL.BaseRepository<TEntity>.Get
  fullName.vb: TCPServer.DAL.BaseRepository(Of TEntity).Get
  nameWithType: BaseRepository<TEntity>.Get
  nameWithType.vb: BaseRepository(Of TEntity).Get
- uid: TCPServer.DAL.BaseRepository`1.GetByID(System.Object)
  name: GetByID(Object)
  href: api/TCPServer.DAL.BaseRepository-1.html#TCPServer_DAL_BaseRepository_1_GetByID_System_Object_
  commentId: M:TCPServer.DAL.BaseRepository`1.GetByID(System.Object)
  fullName: TCPServer.DAL.BaseRepository<TEntity>.GetByID(System.Object)
  fullName.vb: TCPServer.DAL.BaseRepository(Of TEntity).GetByID(System.Object)
  nameWithType: BaseRepository<TEntity>.GetByID(Object)
  nameWithType.vb: BaseRepository(Of TEntity).GetByID(Object)
- uid: TCPServer.DAL.BaseRepository`1.GetByID*
  name: GetByID
  href: api/TCPServer.DAL.BaseRepository-1.html#TCPServer_DAL_BaseRepository_1_GetByID_
  commentId: Overload:TCPServer.DAL.BaseRepository`1.GetByID
  isSpec: "True"
  fullName: TCPServer.DAL.BaseRepository<TEntity>.GetByID
  fullName.vb: TCPServer.DAL.BaseRepository(Of TEntity).GetByID
  nameWithType: BaseRepository<TEntity>.GetByID
  nameWithType.vb: BaseRepository(Of TEntity).GetByID
- uid: TCPServer.DAL.BaseRepository`1.Insert(`0)
  name: Insert(TEntity)
  href: api/TCPServer.DAL.BaseRepository-1.html#TCPServer_DAL_BaseRepository_1_Insert__0_
  commentId: M:TCPServer.DAL.BaseRepository`1.Insert(`0)
  fullName: TCPServer.DAL.BaseRepository<TEntity>.Insert(TEntity)
  fullName.vb: TCPServer.DAL.BaseRepository(Of TEntity).Insert(TEntity)
  nameWithType: BaseRepository<TEntity>.Insert(TEntity)
  nameWithType.vb: BaseRepository(Of TEntity).Insert(TEntity)
- uid: TCPServer.DAL.BaseRepository`1.Insert*
  name: Insert
  href: api/TCPServer.DAL.BaseRepository-1.html#TCPServer_DAL_BaseRepository_1_Insert_
  commentId: Overload:TCPServer.DAL.BaseRepository`1.Insert
  isSpec: "True"
  fullName: TCPServer.DAL.BaseRepository<TEntity>.Insert
  fullName.vb: TCPServer.DAL.BaseRepository(Of TEntity).Insert
  nameWithType: BaseRepository<TEntity>.Insert
  nameWithType.vb: BaseRepository(Of TEntity).Insert
- uid: TCPServer.DAL.BaseRepository`1.Update(`0)
  name: Update(TEntity)
  href: api/TCPServer.DAL.BaseRepository-1.html#TCPServer_DAL_BaseRepository_1_Update__0_
  commentId: M:TCPServer.DAL.BaseRepository`1.Update(`0)
  fullName: TCPServer.DAL.BaseRepository<TEntity>.Update(TEntity)
  fullName.vb: TCPServer.DAL.BaseRepository(Of TEntity).Update(TEntity)
  nameWithType: BaseRepository<TEntity>.Update(TEntity)
  nameWithType.vb: BaseRepository(Of TEntity).Update(TEntity)
- uid: TCPServer.DAL.BaseRepository`1.Update*
  name: Update
  href: api/TCPServer.DAL.BaseRepository-1.html#TCPServer_DAL_BaseRepository_1_Update_
  commentId: Overload:TCPServer.DAL.BaseRepository`1.Update
  isSpec: "True"
  fullName: TCPServer.DAL.BaseRepository<TEntity>.Update
  fullName.vb: TCPServer.DAL.BaseRepository(Of TEntity).Update
  nameWithType: BaseRepository<TEntity>.Update
  nameWithType.vb: BaseRepository(Of TEntity).Update
- uid: TCPServer.DAL.IRepository`1
  name: IRepository<TEntity>
  href: api/TCPServer.DAL.IRepository-1.html
  commentId: T:TCPServer.DAL.IRepository`1
  name.vb: IRepository(Of TEntity)
  fullName: TCPServer.DAL.IRepository<TEntity>
  fullName.vb: TCPServer.DAL.IRepository(Of TEntity)
  nameWithType: IRepository<TEntity>
  nameWithType.vb: IRepository(Of TEntity)
- uid: TCPServer.DAL.IRepository`1.Commit
  name: Commit()
  href: api/TCPServer.DAL.IRepository-1.html#TCPServer_DAL_IRepository_1_Commit
  commentId: M:TCPServer.DAL.IRepository`1.Commit
  fullName: TCPServer.DAL.IRepository<TEntity>.Commit()
  fullName.vb: TCPServer.DAL.IRepository(Of TEntity).Commit()
  nameWithType: IRepository<TEntity>.Commit()
  nameWithType.vb: IRepository(Of TEntity).Commit()
- uid: TCPServer.DAL.IRepository`1.Commit*
  name: Commit
  href: api/TCPServer.DAL.IRepository-1.html#TCPServer_DAL_IRepository_1_Commit_
  commentId: Overload:TCPServer.DAL.IRepository`1.Commit
  isSpec: "True"
  fullName: TCPServer.DAL.IRepository<TEntity>.Commit
  fullName.vb: TCPServer.DAL.IRepository(Of TEntity).Commit
  nameWithType: IRepository<TEntity>.Commit
  nameWithType.vb: IRepository(Of TEntity).Commit
- uid: TCPServer.DAL.IRepository`1.Delete(`0)
  name: Delete(TEntity)
  href: api/TCPServer.DAL.IRepository-1.html#TCPServer_DAL_IRepository_1_Delete__0_
  commentId: M:TCPServer.DAL.IRepository`1.Delete(`0)
  fullName: TCPServer.DAL.IRepository<TEntity>.Delete(TEntity)
  fullName.vb: TCPServer.DAL.IRepository(Of TEntity).Delete(TEntity)
  nameWithType: IRepository<TEntity>.Delete(TEntity)
  nameWithType.vb: IRepository(Of TEntity).Delete(TEntity)
- uid: TCPServer.DAL.IRepository`1.Delete(System.Object)
  name: Delete(Object)
  href: api/TCPServer.DAL.IRepository-1.html#TCPServer_DAL_IRepository_1_Delete_System_Object_
  commentId: M:TCPServer.DAL.IRepository`1.Delete(System.Object)
  fullName: TCPServer.DAL.IRepository<TEntity>.Delete(System.Object)
  fullName.vb: TCPServer.DAL.IRepository(Of TEntity).Delete(System.Object)
  nameWithType: IRepository<TEntity>.Delete(Object)
  nameWithType.vb: IRepository(Of TEntity).Delete(Object)
- uid: TCPServer.DAL.IRepository`1.Delete*
  name: Delete
  href: api/TCPServer.DAL.IRepository-1.html#TCPServer_DAL_IRepository_1_Delete_
  commentId: Overload:TCPServer.DAL.IRepository`1.Delete
  isSpec: "True"
  fullName: TCPServer.DAL.IRepository<TEntity>.Delete
  fullName.vb: TCPServer.DAL.IRepository(Of TEntity).Delete
  nameWithType: IRepository<TEntity>.Delete
  nameWithType.vb: IRepository(Of TEntity).Delete
- uid: TCPServer.DAL.IRepository`1.GetByID(System.Object)
  name: GetByID(Object)
  href: api/TCPServer.DAL.IRepository-1.html#TCPServer_DAL_IRepository_1_GetByID_System_Object_
  commentId: M:TCPServer.DAL.IRepository`1.GetByID(System.Object)
  fullName: TCPServer.DAL.IRepository<TEntity>.GetByID(System.Object)
  fullName.vb: TCPServer.DAL.IRepository(Of TEntity).GetByID(System.Object)
  nameWithType: IRepository<TEntity>.GetByID(Object)
  nameWithType.vb: IRepository(Of TEntity).GetByID(Object)
- uid: TCPServer.DAL.IRepository`1.GetByID*
  name: GetByID
  href: api/TCPServer.DAL.IRepository-1.html#TCPServer_DAL_IRepository_1_GetByID_
  commentId: Overload:TCPServer.DAL.IRepository`1.GetByID
  isSpec: "True"
  fullName: TCPServer.DAL.IRepository<TEntity>.GetByID
  fullName.vb: TCPServer.DAL.IRepository(Of TEntity).GetByID
  nameWithType: IRepository<TEntity>.GetByID
  nameWithType.vb: IRepository(Of TEntity).GetByID
- uid: TCPServer.DAL.IRepository`1.Insert(`0)
  name: Insert(TEntity)
  href: api/TCPServer.DAL.IRepository-1.html#TCPServer_DAL_IRepository_1_Insert__0_
  commentId: M:TCPServer.DAL.IRepository`1.Insert(`0)
  fullName: TCPServer.DAL.IRepository<TEntity>.Insert(TEntity)
  fullName.vb: TCPServer.DAL.IRepository(Of TEntity).Insert(TEntity)
  nameWithType: IRepository<TEntity>.Insert(TEntity)
  nameWithType.vb: IRepository(Of TEntity).Insert(TEntity)
- uid: TCPServer.DAL.IRepository`1.Insert*
  name: Insert
  href: api/TCPServer.DAL.IRepository-1.html#TCPServer_DAL_IRepository_1_Insert_
  commentId: Overload:TCPServer.DAL.IRepository`1.Insert
  isSpec: "True"
  fullName: TCPServer.DAL.IRepository<TEntity>.Insert
  fullName.vb: TCPServer.DAL.IRepository(Of TEntity).Insert
  nameWithType: IRepository<TEntity>.Insert
  nameWithType.vb: IRepository(Of TEntity).Insert
- uid: TCPServer.DAL.IRepository`1.Update(`0)
  name: Update(TEntity)
  href: api/TCPServer.DAL.IRepository-1.html#TCPServer_DAL_IRepository_1_Update__0_
  commentId: M:TCPServer.DAL.IRepository`1.Update(`0)
  fullName: TCPServer.DAL.IRepository<TEntity>.Update(TEntity)
  fullName.vb: TCPServer.DAL.IRepository(Of TEntity).Update(TEntity)
  nameWithType: IRepository<TEntity>.Update(TEntity)
  nameWithType.vb: IRepository(Of TEntity).Update(TEntity)
- uid: TCPServer.DAL.IRepository`1.Update*
  name: Update
  href: api/TCPServer.DAL.IRepository-1.html#TCPServer_DAL_IRepository_1_Update_
  commentId: Overload:TCPServer.DAL.IRepository`1.Update
  isSpec: "True"
  fullName: TCPServer.DAL.IRepository<TEntity>.Update
  fullName.vb: TCPServer.DAL.IRepository(Of TEntity).Update
  nameWithType: IRepository<TEntity>.Update
  nameWithType.vb: IRepository(Of TEntity).Update
- uid: TCPServer.DAL.JokeRepository
  name: JokeRepository
  href: api/TCPServer.DAL.JokeRepository.html
  commentId: T:TCPServer.DAL.JokeRepository
  fullName: TCPServer.DAL.JokeRepository
  nameWithType: JokeRepository
- uid: TCPServer.DAL.JokeRepository.#ctor(TCPServer.Models.ServerDatabaseContext)
  name: JokeRepository(ServerDatabaseContext)
  href: api/TCPServer.DAL.JokeRepository.html#TCPServer_DAL_JokeRepository__ctor_TCPServer_Models_ServerDatabaseContext_
  commentId: M:TCPServer.DAL.JokeRepository.#ctor(TCPServer.Models.ServerDatabaseContext)
  fullName: TCPServer.DAL.JokeRepository.JokeRepository(TCPServer.Models.ServerDatabaseContext)
  nameWithType: JokeRepository.JokeRepository(ServerDatabaseContext)
- uid: TCPServer.DAL.JokeRepository.#ctor*
  name: JokeRepository
  href: api/TCPServer.DAL.JokeRepository.html#TCPServer_DAL_JokeRepository__ctor_
  commentId: Overload:TCPServer.DAL.JokeRepository.#ctor
  isSpec: "True"
  fullName: TCPServer.DAL.JokeRepository.JokeRepository
  nameWithType: JokeRepository.JokeRepository
- uid: TCPServer.DAL.JokeRepository.getIDList
  name: getIDList()
  href: api/TCPServer.DAL.JokeRepository.html#TCPServer_DAL_JokeRepository_getIDList
  commentId: M:TCPServer.DAL.JokeRepository.getIDList
  fullName: TCPServer.DAL.JokeRepository.getIDList()
  nameWithType: JokeRepository.getIDList()
- uid: TCPServer.DAL.JokeRepository.getIDList*
  name: getIDList
  href: api/TCPServer.DAL.JokeRepository.html#TCPServer_DAL_JokeRepository_getIDList_
  commentId: Overload:TCPServer.DAL.JokeRepository.getIDList
  isSpec: "True"
  fullName: TCPServer.DAL.JokeRepository.getIDList
  nameWithType: JokeRepository.getIDList
- uid: TCPServer.DAL.JokeRepository.getJokeList
  name: getJokeList()
  href: api/TCPServer.DAL.JokeRepository.html#TCPServer_DAL_JokeRepository_getJokeList
  commentId: M:TCPServer.DAL.JokeRepository.getJokeList
  fullName: TCPServer.DAL.JokeRepository.getJokeList()
  nameWithType: JokeRepository.getJokeList()
- uid: TCPServer.DAL.JokeRepository.getJokeList*
  name: getJokeList
  href: api/TCPServer.DAL.JokeRepository.html#TCPServer_DAL_JokeRepository_getJokeList_
  commentId: Overload:TCPServer.DAL.JokeRepository.getJokeList
  isSpec: "True"
  fullName: TCPServer.DAL.JokeRepository.getJokeList
  nameWithType: JokeRepository.getJokeList
- uid: TCPServer.DAL.JokeRepository.GetNum
  name: GetNum()
  href: api/TCPServer.DAL.JokeRepository.html#TCPServer_DAL_JokeRepository_GetNum
  commentId: M:TCPServer.DAL.JokeRepository.GetNum
  fullName: TCPServer.DAL.JokeRepository.GetNum()
  nameWithType: JokeRepository.GetNum()
- uid: TCPServer.DAL.JokeRepository.GetNum*
  name: GetNum
  href: api/TCPServer.DAL.JokeRepository.html#TCPServer_DAL_JokeRepository_GetNum_
  commentId: Overload:TCPServer.DAL.JokeRepository.GetNum
  isSpec: "True"
  fullName: TCPServer.DAL.JokeRepository.GetNum
  nameWithType: JokeRepository.GetNum
- uid: TCPServer.DAL.UserRepository
  name: UserRepository
  href: api/TCPServer.DAL.UserRepository.html
  commentId: T:TCPServer.DAL.UserRepository
  fullName: TCPServer.DAL.UserRepository
  nameWithType: UserRepository
- uid: TCPServer.DAL.UserRepository.#ctor(TCPServer.Models.ServerDatabaseContext)
  name: UserRepository(ServerDatabaseContext)
  href: api/TCPServer.DAL.UserRepository.html#TCPServer_DAL_UserRepository__ctor_TCPServer_Models_ServerDatabaseContext_
  commentId: M:TCPServer.DAL.UserRepository.#ctor(TCPServer.Models.ServerDatabaseContext)
  fullName: TCPServer.DAL.UserRepository.UserRepository(TCPServer.Models.ServerDatabaseContext)
  nameWithType: UserRepository.UserRepository(ServerDatabaseContext)
- uid: TCPServer.DAL.UserRepository.#ctor*
  name: UserRepository
  href: api/TCPServer.DAL.UserRepository.html#TCPServer_DAL_UserRepository__ctor_
  commentId: Overload:TCPServer.DAL.UserRepository.#ctor
  isSpec: "True"
  fullName: TCPServer.DAL.UserRepository.UserRepository
  nameWithType: UserRepository.UserRepository
- uid: TCPServer.DAL.UserRepository.getUser(System.String)
  name: getUser(String)
  href: api/TCPServer.DAL.UserRepository.html#TCPServer_DAL_UserRepository_getUser_System_String_
  commentId: M:TCPServer.DAL.UserRepository.getUser(System.String)
  fullName: TCPServer.DAL.UserRepository.getUser(System.String)
  nameWithType: UserRepository.getUser(String)
- uid: TCPServer.DAL.UserRepository.getUser*
  name: getUser
  href: api/TCPServer.DAL.UserRepository.html#TCPServer_DAL_UserRepository_getUser_
  commentId: Overload:TCPServer.DAL.UserRepository.getUser
  isSpec: "True"
  fullName: TCPServer.DAL.UserRepository.getUser
  nameWithType: UserRepository.getUser
- uid: TCPServer.JokeSQL
  name: JokeSQL
  href: api/TCPServer.JokeSQL.html
  commentId: T:TCPServer.JokeSQL
  fullName: TCPServer.JokeSQL
  nameWithType: JokeSQL
- uid: TCPServer.JokeSQL.#ctor(TCPServer.Models.ServerDatabaseContext)
  name: JokeSQL(ServerDatabaseContext)
  href: api/TCPServer.JokeSQL.html#TCPServer_JokeSQL__ctor_TCPServer_Models_ServerDatabaseContext_
  commentId: M:TCPServer.JokeSQL.#ctor(TCPServer.Models.ServerDatabaseContext)
  fullName: TCPServer.JokeSQL.JokeSQL(TCPServer.Models.ServerDatabaseContext)
  nameWithType: JokeSQL.JokeSQL(ServerDatabaseContext)
- uid: TCPServer.JokeSQL.#ctor*
  name: JokeSQL
  href: api/TCPServer.JokeSQL.html#TCPServer_JokeSQL__ctor_
  commentId: Overload:TCPServer.JokeSQL.#ctor
  isSpec: "True"
  fullName: TCPServer.JokeSQL.JokeSQL
  nameWithType: JokeSQL.JokeSQL
- uid: TCPServer.JokeSQL.AddJoke(System.String,System.String[]@)
  name: AddJoke(String, ref String[])
  href: api/TCPServer.JokeSQL.html#TCPServer_JokeSQL_AddJoke_System_String_System_String____
  commentId: M:TCPServer.JokeSQL.AddJoke(System.String,System.String[]@)
  name.vb: AddJoke(String, ByRef String())
  fullName: TCPServer.JokeSQL.AddJoke(System.String, ref System.String[])
  fullName.vb: TCPServer.JokeSQL.AddJoke(System.String, ByRef System.String())
  nameWithType: JokeSQL.AddJoke(String, ref String[])
  nameWithType.vb: JokeSQL.AddJoke(String, ByRef String())
- uid: TCPServer.JokeSQL.AddJoke*
  name: AddJoke
  href: api/TCPServer.JokeSQL.html#TCPServer_JokeSQL_AddJoke_
  commentId: Overload:TCPServer.JokeSQL.AddJoke
  isSpec: "True"
  fullName: TCPServer.JokeSQL.AddJoke
  nameWithType: JokeSQL.AddJoke
- uid: TCPServer.JokeSQL.delJoke(System.String)
  name: delJoke(String)
  href: api/TCPServer.JokeSQL.html#TCPServer_JokeSQL_delJoke_System_String_
  commentId: M:TCPServer.JokeSQL.delJoke(System.String)
  fullName: TCPServer.JokeSQL.delJoke(System.String)
  nameWithType: JokeSQL.delJoke(String)
- uid: TCPServer.JokeSQL.delJoke*
  name: delJoke
  href: api/TCPServer.JokeSQL.html#TCPServer_JokeSQL_delJoke_
  commentId: Overload:TCPServer.JokeSQL.delJoke
  isSpec: "True"
  fullName: TCPServer.JokeSQL.delJoke
  nameWithType: JokeSQL.delJoke
- uid: TCPServer.JokeSQL.GetJoke
  name: GetJoke()
  href: api/TCPServer.JokeSQL.html#TCPServer_JokeSQL_GetJoke
  commentId: M:TCPServer.JokeSQL.GetJoke
  fullName: TCPServer.JokeSQL.GetJoke()
  nameWithType: JokeSQL.GetJoke()
- uid: TCPServer.JokeSQL.GetJoke*
  name: GetJoke
  href: api/TCPServer.JokeSQL.html#TCPServer_JokeSQL_GetJoke_
  commentId: Overload:TCPServer.JokeSQL.GetJoke
  isSpec: "True"
  fullName: TCPServer.JokeSQL.GetJoke
  nameWithType: JokeSQL.GetJoke
- uid: TCPServer.JokeSQL.listJokes(System.String[]@)
  name: listJokes(ref String[])
  href: api/TCPServer.JokeSQL.html#TCPServer_JokeSQL_listJokes_System_String____
  commentId: M:TCPServer.JokeSQL.listJokes(System.String[]@)
  name.vb: listJokes(ByRef String())
  fullName: TCPServer.JokeSQL.listJokes(ref System.String[])
  fullName.vb: TCPServer.JokeSQL.listJokes(ByRef System.String())
  nameWithType: JokeSQL.listJokes(ref String[])
  nameWithType.vb: JokeSQL.listJokes(ByRef String())
- uid: TCPServer.JokeSQL.listJokes*
  name: listJokes
  href: api/TCPServer.JokeSQL.html#TCPServer_JokeSQL_listJokes_
  commentId: Overload:TCPServer.JokeSQL.listJokes
  isSpec: "True"
  fullName: TCPServer.JokeSQL.listJokes
  nameWithType: JokeSQL.listJokes
- uid: TCPServer.JokeSQL.suchar
  name: JokeSQL.suchar
  href: api/TCPServer.JokeSQL.suchar.html
  commentId: T:TCPServer.JokeSQL.suchar
  fullName: TCPServer.JokeSQL.suchar
  nameWithType: JokeSQL.suchar
- uid: TCPServer.JokeSQL.suchar.#ctor(System.Int32,System.Int32,System.String)
  name: suchar(Int32, Int32, String)
  href: api/TCPServer.JokeSQL.suchar.html#TCPServer_JokeSQL_suchar__ctor_System_Int32_System_Int32_System_String_
  commentId: M:TCPServer.JokeSQL.suchar.#ctor(System.Int32,System.Int32,System.String)
  fullName: TCPServer.JokeSQL.suchar.suchar(System.Int32, System.Int32, System.String)
  nameWithType: JokeSQL.suchar.suchar(Int32, Int32, String)
- uid: TCPServer.JokeSQL.suchar.#ctor*
  name: suchar
  href: api/TCPServer.JokeSQL.suchar.html#TCPServer_JokeSQL_suchar__ctor_
  commentId: Overload:TCPServer.JokeSQL.suchar.#ctor
  isSpec: "True"
  fullName: TCPServer.JokeSQL.suchar.suchar
  nameWithType: JokeSQL.suchar.suchar
- uid: TCPServer.JokeSQL.suchar.content
  name: content
  href: api/TCPServer.JokeSQL.suchar.html#TCPServer_JokeSQL_suchar_content
  commentId: P:TCPServer.JokeSQL.suchar.content
  fullName: TCPServer.JokeSQL.suchar.content
  nameWithType: JokeSQL.suchar.content
- uid: TCPServer.JokeSQL.suchar.content*
  name: content
  href: api/TCPServer.JokeSQL.suchar.html#TCPServer_JokeSQL_suchar_content_
  commentId: Overload:TCPServer.JokeSQL.suchar.content
  isSpec: "True"
  fullName: TCPServer.JokeSQL.suchar.content
  nameWithType: JokeSQL.suchar.content
- uid: TCPServer.JokeSQL.suchar.creatorID
  name: creatorID
  href: api/TCPServer.JokeSQL.suchar.html#TCPServer_JokeSQL_suchar_creatorID
  commentId: P:TCPServer.JokeSQL.suchar.creatorID
  fullName: TCPServer.JokeSQL.suchar.creatorID
  nameWithType: JokeSQL.suchar.creatorID
- uid: TCPServer.JokeSQL.suchar.creatorID*
  name: creatorID
  href: api/TCPServer.JokeSQL.suchar.html#TCPServer_JokeSQL_suchar_creatorID_
  commentId: Overload:TCPServer.JokeSQL.suchar.creatorID
  isSpec: "True"
  fullName: TCPServer.JokeSQL.suchar.creatorID
  nameWithType: JokeSQL.suchar.creatorID
- uid: TCPServer.JokeSQL.suchar.id
  name: id
  href: api/TCPServer.JokeSQL.suchar.html#TCPServer_JokeSQL_suchar_id
  commentId: P:TCPServer.JokeSQL.suchar.id
  fullName: TCPServer.JokeSQL.suchar.id
  nameWithType: JokeSQL.suchar.id
- uid: TCPServer.JokeSQL.suchar.id*
  name: id
  href: api/TCPServer.JokeSQL.suchar.html#TCPServer_JokeSQL_suchar_id_
  commentId: Overload:TCPServer.JokeSQL.suchar.id
  isSpec: "True"
  fullName: TCPServer.JokeSQL.suchar.id
  nameWithType: JokeSQL.suchar.id
- uid: TCPServer.JokeSQL.suchar.Stringify
  name: Stringify()
  href: api/TCPServer.JokeSQL.suchar.html#TCPServer_JokeSQL_suchar_Stringify
  commentId: M:TCPServer.JokeSQL.suchar.Stringify
  fullName: TCPServer.JokeSQL.suchar.Stringify()
  nameWithType: JokeSQL.suchar.Stringify()
- uid: TCPServer.JokeSQL.suchar.Stringify*
  name: Stringify
  href: api/TCPServer.JokeSQL.suchar.html#TCPServer_JokeSQL_suchar_Stringify_
  commentId: Overload:TCPServer.JokeSQL.suchar.Stringify
  isSpec: "True"
  fullName: TCPServer.JokeSQL.suchar.Stringify
  nameWithType: JokeSQL.suchar.Stringify
- uid: TCPServer.Models
  name: TCPServer.Models
  href: api/TCPServer.Models.html
  commentId: N:TCPServer.Models
  fullName: TCPServer.Models
  nameWithType: TCPServer.Models
- uid: TCPServer.Models.Joke
  name: Joke
  href: api/TCPServer.Models.Joke.html
  commentId: T:TCPServer.Models.Joke
  fullName: TCPServer.Models.Joke
  nameWithType: Joke
- uid: TCPServer.Models.Joke.Content
  name: Content
  href: api/TCPServer.Models.Joke.html#TCPServer_Models_Joke_Content
  commentId: P:TCPServer.Models.Joke.Content
  fullName: TCPServer.Models.Joke.Content
  nameWithType: Joke.Content
- uid: TCPServer.Models.Joke.Content*
  name: Content
  href: api/TCPServer.Models.Joke.html#TCPServer_Models_Joke_Content_
  commentId: Overload:TCPServer.Models.Joke.Content
  isSpec: "True"
  fullName: TCPServer.Models.Joke.Content
  nameWithType: Joke.Content
- uid: TCPServer.Models.Joke.CreatorID
  name: CreatorID
  href: api/TCPServer.Models.Joke.html#TCPServer_Models_Joke_CreatorID
  commentId: P:TCPServer.Models.Joke.CreatorID
  fullName: TCPServer.Models.Joke.CreatorID
  nameWithType: Joke.CreatorID
- uid: TCPServer.Models.Joke.CreatorID*
  name: CreatorID
  href: api/TCPServer.Models.Joke.html#TCPServer_Models_Joke_CreatorID_
  commentId: Overload:TCPServer.Models.Joke.CreatorID
  isSpec: "True"
  fullName: TCPServer.Models.Joke.CreatorID
  nameWithType: Joke.CreatorID
- uid: TCPServer.Models.Joke.ID
  name: ID
  href: api/TCPServer.Models.Joke.html#TCPServer_Models_Joke_ID
  commentId: P:TCPServer.Models.Joke.ID
  fullName: TCPServer.Models.Joke.ID
  nameWithType: Joke.ID
- uid: TCPServer.Models.Joke.ID*
  name: ID
  href: api/TCPServer.Models.Joke.html#TCPServer_Models_Joke_ID_
  commentId: Overload:TCPServer.Models.Joke.ID
  isSpec: "True"
  fullName: TCPServer.Models.Joke.ID
  nameWithType: Joke.ID
- uid: TCPServer.Models.ServerDatabaseContext
  name: ServerDatabaseContext
  href: api/TCPServer.Models.ServerDatabaseContext.html
  commentId: T:TCPServer.Models.ServerDatabaseContext
  fullName: TCPServer.Models.ServerDatabaseContext
  nameWithType: ServerDatabaseContext
- uid: TCPServer.Models.ServerDatabaseContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{TCPServer.Models.ServerDatabaseContext})
  name: ServerDatabaseContext(DbContextOptions<ServerDatabaseContext>)
  href: api/TCPServer.Models.ServerDatabaseContext.html#TCPServer_Models_ServerDatabaseContext__ctor_Microsoft_EntityFrameworkCore_DbContextOptions_TCPServer_Models_ServerDatabaseContext__
  commentId: M:TCPServer.Models.ServerDatabaseContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{TCPServer.Models.ServerDatabaseContext})
  name.vb: ServerDatabaseContext(DbContextOptions(Of ServerDatabaseContext))
  fullName: TCPServer.Models.ServerDatabaseContext.ServerDatabaseContext(Microsoft.EntityFrameworkCore.DbContextOptions<TCPServer.Models.ServerDatabaseContext>)
  fullName.vb: TCPServer.Models.ServerDatabaseContext.ServerDatabaseContext(Microsoft.EntityFrameworkCore.DbContextOptions(Of TCPServer.Models.ServerDatabaseContext))
  nameWithType: ServerDatabaseContext.ServerDatabaseContext(DbContextOptions<ServerDatabaseContext>)
  nameWithType.vb: ServerDatabaseContext.ServerDatabaseContext(DbContextOptions(Of ServerDatabaseContext))
- uid: TCPServer.Models.ServerDatabaseContext.#ctor*
  name: ServerDatabaseContext
  href: api/TCPServer.Models.ServerDatabaseContext.html#TCPServer_Models_ServerDatabaseContext__ctor_
  commentId: Overload:TCPServer.Models.ServerDatabaseContext.#ctor
  isSpec: "True"
  fullName: TCPServer.Models.ServerDatabaseContext.ServerDatabaseContext
  nameWithType: ServerDatabaseContext.ServerDatabaseContext
- uid: TCPServer.Models.ServerDatabaseContext.Jokes
  name: Jokes
  href: api/TCPServer.Models.ServerDatabaseContext.html#TCPServer_Models_ServerDatabaseContext_Jokes
  commentId: P:TCPServer.Models.ServerDatabaseContext.Jokes
  fullName: TCPServer.Models.ServerDatabaseContext.Jokes
  nameWithType: ServerDatabaseContext.Jokes
- uid: TCPServer.Models.ServerDatabaseContext.Jokes*
  name: Jokes
  href: api/TCPServer.Models.ServerDatabaseContext.html#TCPServer_Models_ServerDatabaseContext_Jokes_
  commentId: Overload:TCPServer.Models.ServerDatabaseContext.Jokes
  isSpec: "True"
  fullName: TCPServer.Models.ServerDatabaseContext.Jokes
  nameWithType: ServerDatabaseContext.Jokes
- uid: TCPServer.Models.ServerDatabaseContext.Users
  name: Users
  href: api/TCPServer.Models.ServerDatabaseContext.html#TCPServer_Models_ServerDatabaseContext_Users
  commentId: P:TCPServer.Models.ServerDatabaseContext.Users
  fullName: TCPServer.Models.ServerDatabaseContext.Users
  nameWithType: ServerDatabaseContext.Users
- uid: TCPServer.Models.ServerDatabaseContext.Users*
  name: Users
  href: api/TCPServer.Models.ServerDatabaseContext.html#TCPServer_Models_ServerDatabaseContext_Users_
  commentId: Overload:TCPServer.Models.ServerDatabaseContext.Users
  isSpec: "True"
  fullName: TCPServer.Models.ServerDatabaseContext.Users
  nameWithType: ServerDatabaseContext.Users
- uid: TCPServer.Models.User
  name: User
  href: api/TCPServer.Models.User.html
  commentId: T:TCPServer.Models.User
  fullName: TCPServer.Models.User
  nameWithType: User
- uid: TCPServer.Models.User.ID
  name: ID
  href: api/TCPServer.Models.User.html#TCPServer_Models_User_ID
  commentId: P:TCPServer.Models.User.ID
  fullName: TCPServer.Models.User.ID
  nameWithType: User.ID
- uid: TCPServer.Models.User.ID*
  name: ID
  href: api/TCPServer.Models.User.html#TCPServer_Models_User_ID_
  commentId: Overload:TCPServer.Models.User.ID
  isSpec: "True"
  fullName: TCPServer.Models.User.ID
  nameWithType: User.ID
- uid: TCPServer.Models.User.isAdmin
  name: isAdmin
  href: api/TCPServer.Models.User.html#TCPServer_Models_User_isAdmin
  commentId: P:TCPServer.Models.User.isAdmin
  fullName: TCPServer.Models.User.isAdmin
  nameWithType: User.isAdmin
- uid: TCPServer.Models.User.isAdmin*
  name: isAdmin
  href: api/TCPServer.Models.User.html#TCPServer_Models_User_isAdmin_
  commentId: Overload:TCPServer.Models.User.isAdmin
  isSpec: "True"
  fullName: TCPServer.Models.User.isAdmin
  nameWithType: User.isAdmin
- uid: TCPServer.Models.User.login
  name: login
  href: api/TCPServer.Models.User.html#TCPServer_Models_User_login
  commentId: P:TCPServer.Models.User.login
  fullName: TCPServer.Models.User.login
  nameWithType: User.login
- uid: TCPServer.Models.User.login*
  name: login
  href: api/TCPServer.Models.User.html#TCPServer_Models_User_login_
  commentId: Overload:TCPServer.Models.User.login
  isSpec: "True"
  fullName: TCPServer.Models.User.login
  nameWithType: User.login
- uid: TCPServer.Models.User.password
  name: password
  href: api/TCPServer.Models.User.html#TCPServer_Models_User_password
  commentId: P:TCPServer.Models.User.password
  fullName: TCPServer.Models.User.password
  nameWithType: User.password
- uid: TCPServer.Models.User.password*
  name: password
  href: api/TCPServer.Models.User.html#TCPServer_Models_User_password_
  commentId: Overload:TCPServer.Models.User.password
  isSpec: "True"
  fullName: TCPServer.Models.User.password
  nameWithType: User.password
- uid: TCPServer.ServerAPM
  name: ServerAPM
  href: api/TCPServer.ServerAPM.html
  commentId: T:TCPServer.ServerAPM
  fullName: TCPServer.ServerAPM
  nameWithType: ServerAPM
- uid: TCPServer.ServerAPM.#ctor(System.String,System.Int32,System.Int32)
  name: ServerAPM(String, Int32, Int32)
  href: api/TCPServer.ServerAPM.html#TCPServer_ServerAPM__ctor_System_String_System_Int32_System_Int32_
  commentId: M:TCPServer.ServerAPM.#ctor(System.String,System.Int32,System.Int32)
  fullName: TCPServer.ServerAPM.ServerAPM(System.String, System.Int32, System.Int32)
  nameWithType: ServerAPM.ServerAPM(String, Int32, Int32)
- uid: TCPServer.ServerAPM.#ctor*
  name: ServerAPM
  href: api/TCPServer.ServerAPM.html#TCPServer_ServerAPM__ctor_
  commentId: Overload:TCPServer.ServerAPM.#ctor
  isSpec: "True"
  fullName: TCPServer.ServerAPM.ServerAPM
  nameWithType: ServerAPM.ServerAPM
- uid: TCPServer.ServerAPM.AcceptClient
  name: AcceptClient()
  href: api/TCPServer.ServerAPM.html#TCPServer_ServerAPM_AcceptClient
  commentId: M:TCPServer.ServerAPM.AcceptClient
  fullName: TCPServer.ServerAPM.AcceptClient()
  nameWithType: ServerAPM.AcceptClient()
- uid: TCPServer.ServerAPM.AcceptClient*
  name: AcceptClient
  href: api/TCPServer.ServerAPM.html#TCPServer_ServerAPM_AcceptClient_
  commentId: Overload:TCPServer.ServerAPM.AcceptClient
  isSpec: "True"
  fullName: TCPServer.ServerAPM.AcceptClient
  nameWithType: ServerAPM.AcceptClient
- uid: TCPServer.ServerAPM.BeginDataTransmission(System.Net.Sockets.NetworkStream)
  name: BeginDataTransmission(NetworkStream)
  href: api/TCPServer.ServerAPM.html#TCPServer_ServerAPM_BeginDataTransmission_System_Net_Sockets_NetworkStream_
  commentId: M:TCPServer.ServerAPM.BeginDataTransmission(System.Net.Sockets.NetworkStream)
  fullName: TCPServer.ServerAPM.BeginDataTransmission(System.Net.Sockets.NetworkStream)
  nameWithType: ServerAPM.BeginDataTransmission(NetworkStream)
- uid: TCPServer.ServerAPM.BeginDataTransmission*
  name: BeginDataTransmission
  href: api/TCPServer.ServerAPM.html#TCPServer_ServerAPM_BeginDataTransmission_
  commentId: Overload:TCPServer.ServerAPM.BeginDataTransmission
  isSpec: "True"
  fullName: TCPServer.ServerAPM.BeginDataTransmission
  nameWithType: ServerAPM.BeginDataTransmission
- uid: TCPServer.ServerAPM.CommandHandler(System.Net.Sockets.NetworkStream,System.Byte[])
  name: CommandHandler(NetworkStream, Byte[])
  href: api/TCPServer.ServerAPM.html#TCPServer_ServerAPM_CommandHandler_System_Net_Sockets_NetworkStream_System_Byte___
  commentId: M:TCPServer.ServerAPM.CommandHandler(System.Net.Sockets.NetworkStream,System.Byte[])
  name.vb: CommandHandler(NetworkStream, Byte())
  fullName: TCPServer.ServerAPM.CommandHandler(System.Net.Sockets.NetworkStream, System.Byte[])
  fullName.vb: TCPServer.ServerAPM.CommandHandler(System.Net.Sockets.NetworkStream, System.Byte())
  nameWithType: ServerAPM.CommandHandler(NetworkStream, Byte[])
  nameWithType.vb: ServerAPM.CommandHandler(NetworkStream, Byte())
- uid: TCPServer.ServerAPM.CommandHandler*
  name: CommandHandler
  href: api/TCPServer.ServerAPM.html#TCPServer_ServerAPM_CommandHandler_
  commentId: Overload:TCPServer.ServerAPM.CommandHandler
  isSpec: "True"
  fullName: TCPServer.ServerAPM.CommandHandler
  nameWithType: ServerAPM.CommandHandler
- uid: TCPServer.ServerAPM.SignIn(System.Net.Sockets.NetworkStream,System.Byte[],System.String[]@)
  name: SignIn(NetworkStream, Byte[], ref String[])
  href: api/TCPServer.ServerAPM.html#TCPServer_ServerAPM_SignIn_System_Net_Sockets_NetworkStream_System_Byte___System_String____
  commentId: M:TCPServer.ServerAPM.SignIn(System.Net.Sockets.NetworkStream,System.Byte[],System.String[]@)
  name.vb: SignIn(NetworkStream, Byte(), ByRef String())
  fullName: TCPServer.ServerAPM.SignIn(System.Net.Sockets.NetworkStream, System.Byte[], ref System.String[])
  fullName.vb: TCPServer.ServerAPM.SignIn(System.Net.Sockets.NetworkStream, System.Byte(), ByRef System.String())
  nameWithType: ServerAPM.SignIn(NetworkStream, Byte[], ref String[])
  nameWithType.vb: ServerAPM.SignIn(NetworkStream, Byte(), ByRef String())
- uid: TCPServer.ServerAPM.SignIn*
  name: SignIn
  href: api/TCPServer.ServerAPM.html#TCPServer_ServerAPM_SignIn_
  commentId: Overload:TCPServer.ServerAPM.SignIn
  isSpec: "True"
  fullName: TCPServer.ServerAPM.SignIn
  nameWithType: ServerAPM.SignIn
- uid: TCPServer.ServerAPM.Start
  name: Start()
  href: api/TCPServer.ServerAPM.html#TCPServer_ServerAPM_Start
  commentId: M:TCPServer.ServerAPM.Start
  fullName: TCPServer.ServerAPM.Start()
  nameWithType: ServerAPM.Start()
- uid: TCPServer.ServerAPM.Start*
  name: Start
  href: api/TCPServer.ServerAPM.html#TCPServer_ServerAPM_Start_
  commentId: Overload:TCPServer.ServerAPM.Start
  isSpec: "True"
  fullName: TCPServer.ServerAPM.Start
  nameWithType: ServerAPM.Start
- uid: TCPServer.ServerAPM.TransmissionDataDelegate
  name: ServerAPM.TransmissionDataDelegate
  href: api/TCPServer.ServerAPM.TransmissionDataDelegate.html
  commentId: T:TCPServer.ServerAPM.TransmissionDataDelegate
  fullName: TCPServer.ServerAPM.TransmissionDataDelegate
  nameWithType: ServerAPM.TransmissionDataDelegate
- uid: TCPServer.ServerSync
  name: ServerSync
  href: api/TCPServer.ServerSync.html
  commentId: T:TCPServer.ServerSync
  fullName: TCPServer.ServerSync
  nameWithType: ServerSync
- uid: TCPServer.ServerSync.#ctor(System.String,System.Int32,System.Int32)
  name: ServerSync(String, Int32, Int32)
  href: api/TCPServer.ServerSync.html#TCPServer_ServerSync__ctor_System_String_System_Int32_System_Int32_
  commentId: M:TCPServer.ServerSync.#ctor(System.String,System.Int32,System.Int32)
  fullName: TCPServer.ServerSync.ServerSync(System.String, System.Int32, System.Int32)
  nameWithType: ServerSync.ServerSync(String, Int32, Int32)
- uid: TCPServer.ServerSync.#ctor*
  name: ServerSync
  href: api/TCPServer.ServerSync.html#TCPServer_ServerSync__ctor_
  commentId: Overload:TCPServer.ServerSync.#ctor
  isSpec: "True"
  fullName: TCPServer.ServerSync.ServerSync
  nameWithType: ServerSync.ServerSync
- uid: TCPServer.ServerSync.AcceptClient
  name: AcceptClient()
  href: api/TCPServer.ServerSync.html#TCPServer_ServerSync_AcceptClient
  commentId: M:TCPServer.ServerSync.AcceptClient
  fullName: TCPServer.ServerSync.AcceptClient()
  nameWithType: ServerSync.AcceptClient()
- uid: TCPServer.ServerSync.AcceptClient*
  name: AcceptClient
  href: api/TCPServer.ServerSync.html#TCPServer_ServerSync_AcceptClient_
  commentId: Overload:TCPServer.ServerSync.AcceptClient
  isSpec: "True"
  fullName: TCPServer.ServerSync.AcceptClient
  nameWithType: ServerSync.AcceptClient
- uid: TCPServer.ServerSync.BeginDataTransmission(System.Net.Sockets.NetworkStream)
  name: BeginDataTransmission(NetworkStream)
  href: api/TCPServer.ServerSync.html#TCPServer_ServerSync_BeginDataTransmission_System_Net_Sockets_NetworkStream_
  commentId: M:TCPServer.ServerSync.BeginDataTransmission(System.Net.Sockets.NetworkStream)
  fullName: TCPServer.ServerSync.BeginDataTransmission(System.Net.Sockets.NetworkStream)
  nameWithType: ServerSync.BeginDataTransmission(NetworkStream)
- uid: TCPServer.ServerSync.BeginDataTransmission*
  name: BeginDataTransmission
  href: api/TCPServer.ServerSync.html#TCPServer_ServerSync_BeginDataTransmission_
  commentId: Overload:TCPServer.ServerSync.BeginDataTransmission
  isSpec: "True"
  fullName: TCPServer.ServerSync.BeginDataTransmission
  nameWithType: ServerSync.BeginDataTransmission
- uid: TCPServer.ServerSync.Start
  name: Start()
  href: api/TCPServer.ServerSync.html#TCPServer_ServerSync_Start
  commentId: M:TCPServer.ServerSync.Start
  fullName: TCPServer.ServerSync.Start()
  nameWithType: ServerSync.Start()
- uid: TCPServer.ServerSync.Start*
  name: Start
  href: api/TCPServer.ServerSync.html#TCPServer_ServerSync_Start_
  commentId: Overload:TCPServer.ServerSync.Start
  isSpec: "True"
  fullName: TCPServer.ServerSync.Start
  nameWithType: ServerSync.Start
- uid: TCPServer.UserManager
  name: UserManager
  href: api/TCPServer.UserManager.html
  commentId: T:TCPServer.UserManager
  fullName: TCPServer.UserManager
  nameWithType: UserManager
- uid: TCPServer.UserManager.#ctor(TCPServer.Models.ServerDatabaseContext)
  name: UserManager(ServerDatabaseContext)
  href: api/TCPServer.UserManager.html#TCPServer_UserManager__ctor_TCPServer_Models_ServerDatabaseContext_
  commentId: M:TCPServer.UserManager.#ctor(TCPServer.Models.ServerDatabaseContext)
  fullName: TCPServer.UserManager.UserManager(TCPServer.Models.ServerDatabaseContext)
  nameWithType: UserManager.UserManager(ServerDatabaseContext)
- uid: TCPServer.UserManager.#ctor*
  name: UserManager
  href: api/TCPServer.UserManager.html#TCPServer_UserManager__ctor_
  commentId: Overload:TCPServer.UserManager.#ctor
  isSpec: "True"
  fullName: TCPServer.UserManager.UserManager
  nameWithType: UserManager.UserManager
- uid: TCPServer.UserManager.addUser(System.String,System.String)
  name: addUser(String, String)
  href: api/TCPServer.UserManager.html#TCPServer_UserManager_addUser_System_String_System_String_
  commentId: M:TCPServer.UserManager.addUser(System.String,System.String)
  fullName: TCPServer.UserManager.addUser(System.String, System.String)
  nameWithType: UserManager.addUser(String, String)
- uid: TCPServer.UserManager.addUser*
  name: addUser
  href: api/TCPServer.UserManager.html#TCPServer_UserManager_addUser_
  commentId: Overload:TCPServer.UserManager.addUser
  isSpec: "True"
  fullName: TCPServer.UserManager.addUser
  nameWithType: UserManager.addUser
- uid: TCPServer.UserManager.deleteUser(System.String,System.String)
  name: deleteUser(String, String)
  href: api/TCPServer.UserManager.html#TCPServer_UserManager_deleteUser_System_String_System_String_
  commentId: M:TCPServer.UserManager.deleteUser(System.String,System.String)
  fullName: TCPServer.UserManager.deleteUser(System.String, System.String)
  nameWithType: UserManager.deleteUser(String, String)
- uid: TCPServer.UserManager.deleteUser*
  name: deleteUser
  href: api/TCPServer.UserManager.html#TCPServer_UserManager_deleteUser_
  commentId: Overload:TCPServer.UserManager.deleteUser
  isSpec: "True"
  fullName: TCPServer.UserManager.deleteUser
  nameWithType: UserManager.deleteUser
- uid: TCPServer.UserManager.GetUserPassword(System.String)
  name: GetUserPassword(String)
  href: api/TCPServer.UserManager.html#TCPServer_UserManager_GetUserPassword_System_String_
  commentId: M:TCPServer.UserManager.GetUserPassword(System.String)
  fullName: TCPServer.UserManager.GetUserPassword(System.String)
  nameWithType: UserManager.GetUserPassword(String)
- uid: TCPServer.UserManager.GetUserPassword*
  name: GetUserPassword
  href: api/TCPServer.UserManager.html#TCPServer_UserManager_GetUserPassword_
  commentId: Overload:TCPServer.UserManager.GetUserPassword
  isSpec: "True"
  fullName: TCPServer.UserManager.GetUserPassword
  nameWithType: UserManager.GetUserPassword
- uid: TCPServer.UserManager.updateUser(System.String,System.String,System.String,System.String)
  name: updateUser(String, String, String, String)
  href: api/TCPServer.UserManager.html#TCPServer_UserManager_updateUser_System_String_System_String_System_String_System_String_
  commentId: M:TCPServer.UserManager.updateUser(System.String,System.String,System.String,System.String)
  fullName: TCPServer.UserManager.updateUser(System.String, System.String, System.String, System.String)
  nameWithType: UserManager.updateUser(String, String, String, String)
- uid: TCPServer.UserManager.updateUser*
  name: updateUser
  href: api/TCPServer.UserManager.html#TCPServer_UserManager_updateUser_
  commentId: Overload:TCPServer.UserManager.updateUser
  isSpec: "True"
  fullName: TCPServer.UserManager.updateUser
  nameWithType: UserManager.updateUser
- uid: TCPServer.UserManager.ur
  name: ur
  href: api/TCPServer.UserManager.html#TCPServer_UserManager_ur
  commentId: P:TCPServer.UserManager.ur
  fullName: TCPServer.UserManager.ur
  nameWithType: UserManager.ur
- uid: TCPServer.UserManager.ur*
  name: ur
  href: api/TCPServer.UserManager.html#TCPServer_UserManager_ur_
  commentId: Overload:TCPServer.UserManager.ur
  isSpec: "True"
  fullName: TCPServer.UserManager.ur
  nameWithType: UserManager.ur
- uid: TCPServer.UserManager.verifyUser(System.String,System.String)
  name: verifyUser(String, String)
  href: api/TCPServer.UserManager.html#TCPServer_UserManager_verifyUser_System_String_System_String_
  commentId: M:TCPServer.UserManager.verifyUser(System.String,System.String)
  fullName: TCPServer.UserManager.verifyUser(System.String, System.String)
  nameWithType: UserManager.verifyUser(String, String)
- uid: TCPServer.UserManager.verifyUser*
  name: verifyUser
  href: api/TCPServer.UserManager.html#TCPServer_UserManager_verifyUser_
  commentId: Overload:TCPServer.UserManager.verifyUser
  isSpec: "True"
  fullName: TCPServer.UserManager.verifyUser
  nameWithType: UserManager.verifyUser
- uid: TCPServer.UserType
  name: UserType
  href: api/TCPServer.UserType.html
  commentId: T:TCPServer.UserType
  fullName: TCPServer.UserType
  nameWithType: UserType
- uid: TCPServer.UserType.Admin
  name: Admin
  href: api/TCPServer.UserType.html#TCPServer_UserType_Admin
  commentId: F:TCPServer.UserType.Admin
  fullName: TCPServer.UserType.Admin
  nameWithType: UserType.Admin
- uid: TCPServer.UserType.LoggedOut
  name: LoggedOut
  href: api/TCPServer.UserType.html#TCPServer_UserType_LoggedOut
  commentId: F:TCPServer.UserType.LoggedOut
  fullName: TCPServer.UserType.LoggedOut
  nameWithType: UserType.LoggedOut
- uid: TCPServer.UserType.NotValid
  name: NotValid
  href: api/TCPServer.UserType.html#TCPServer_UserType_NotValid
  commentId: F:TCPServer.UserType.NotValid
  fullName: TCPServer.UserType.NotValid
  nameWithType: UserType.NotValid
- uid: TCPServer.UserType.Standard
  name: Standard
  href: api/TCPServer.UserType.html#TCPServer_UserType_Standard
  commentId: F:TCPServer.UserType.Standard
  fullName: TCPServer.UserType.Standard
  nameWithType: UserType.Standard
